seqLogo (PWM)
PWM
seqLogo (PWM)
ceiling(PWM)
p=ceiling (PWM)
seqLogo (PWM)
seqLogo (p)
PWM
freqMatrix = NULL
aminos = c("A", "R", "N", "D", "C", "Q", "E", "G", "H", "I", "L", "K", "M", "F", "P", "S", "T", "W", "Y", "V", "B", "Z", "X")
bases = c("A","C","G","T")
for (j in 1:M) {
conteos = c()
for (B in aminos) {
nB = length(which (seqMatrix[,j]==B))
conteos = c(conteos, nB)
}
freqMatrix = cbind (freqMatrix, conteos)
}
rownames (freqMatrix) = aminos
colnames (freqMatrix) = paste0 ("p", 1:M)
freqMatrix = freqMatrix + 1 # Con seudoconteo
#freqMatrix = freqMatrix
freqMatrix
probMatrix = freqMatrix/(N+23)# Con seudoconteo
#probMatrix = freqMatrix/(N)
print (round (probMatrix, 2))
PWM = probMatrix
i=12
sumIi=0
for (b in aminos) {
sumIi = (sumIi + PWM [b,i]*log2(PWM[b,i]))
}
print (2+sumIi)
?seqLogo
require(ggplot2)
require(ggseqlogo)
ggseqlogo(PWM, seq_type="aa")
freqMatrix = NULL
aminos = c("A", "R", "N", "D", "C", "Q", "E", "G", "H", "I", "L", "K", "M", "F", "P", "S", "T", "W", "Y", "V", "B", "Z", "X")
bases = c("A","C","G","T")
for (j in 1:M) {
conteos = c()
for (B in aminos) {
nB = length(which (seqMatrix[,j]==B))
conteos = c(conteos, nB)
}
freqMatrix = cbind (freqMatrix, conteos)
}
rownames (freqMatrix) = aminos
colnames (freqMatrix) = paste0 ("p", 1:M)
freqMatrix = freqMatrix + 0.01 # Con seudoconteo
#freqMatrix = freqMatrix
freqMatrix
probMatrix = freqMatrix/(N+23*0.01)# Con seudoconteo
#probMatrix = freqMatrix/(N)
print (round (probMatrix, 2))
PWM = probMatrix
i=12
sumIi=0
for (b in aminos) {
sumIi = (sumIi + PWM [b,i]*log2(PWM[b,i]))
}
print (2+sumIi)
library(seqLogo)
print (round (PWM,2))
print ("")
ggseqLogo (PWM, seq_type="aa")
print (round (PWM,2))
print ("")
ggseqlogo (PWM, seq_type="aa")
freqMatrix = NULL
aminos = c("A", "R", "N", "D", "C", "Q", "E", "G", "H", "I", "L", "K", "M", "F", "P", "S", "T", "W", "Y", "V", "B", "Z", "X")
bases = c("A","C","G","T")
for (j in 1:M) {
conteos = c()
for (B in aminos) {
nB = length(which (seqMatrix[,j]==B))
conteos = c(conteos, nB)
}
freqMatrix = cbind (freqMatrix, conteos)
}
rownames (freqMatrix) = aminos
colnames (freqMatrix) = paste0 ("p", 1:M)
freqMatrix = freqMatrix + 0.01 # Con seudoconteo
#freqMatrix = freqMatrix
freqMatrix
probMatrix = freqMatrix/(N+23*0.01)# Con seudoconteo
#probMatrix = freqMatrix/(N)
print (round (probMatrix, 2))
PWM = probMatrix
secuencias = c (
"GAGGTAAAC",
"TCCGTAAGT",
"CAGGTTGGA",
"ACAGTCAGT",
"TAGGTCATT",
"TAGGTACTG",
"ATGGTAACT",
"CAGGTATAC",
"TGTGTGAGT",
"AAGGTAAGT"
)
print (c)
secuencias = c (
"GAGGTAAAC",
"TCCGTAAGT",
"CAGGTTGGA",
"ACAGTCAGT",
"TAGGTCATT",
"TAGGTACTG",
"ATGGTAACT",
"CAGGTATAC",
"TGTGTGAGT",
"AAGGTAAGT"
)
print (c)
secuencias = c (
"GAGGTAAAC",
"TCCGTAAGT",
"CAGGTTGGA",
"ACAGTCAGT",
"TAGGTCATT",
"TAGGTACTG",
"ATGGTAACT",
"CAGGTATAC",
"TGTGTGAGT",
"AAGGTAAGT"
)
print (c)
secuencias = c (
"GAGGTAAAC",
"TCCGTAAGT",
"CAGGTTGGA",
"ACAGTCAGT",
"TAGGTCATT",
"TAGGTACTG",
"ATGGTAACT",
"CAGGTATAC",
"TGTGTGAGT",
"AAGGTAAGT"
)
secuencias = c (
"GAGGTAAAC",
"TCCGTAAGT",
"CAGGTTGGA",
"ACAGTCAGT",
"TAGGTCATT",
"TAGGTACTG",
"ATGGTAACT",
"CAGGTATAC",
"TGTGTGAGT",
"AAGGTAAGT"
)
secuencias = c (
"GAGGTAAAC",
"TCCGTAAGT",
"CAGGTTGGA",
"ACAGTCAGT",
"TAGGTCATT",
"TAGGTACTG",
"ATGGTAACT",
"CAGGTATAC",
"TGTGTGAGT",
"AAGGTAAGT"
)
print (c)
secuencias = c (
"GAGGTAAAC",
"TCCGTAAGT",
"CAGGTTGGA",
"ACAGTCAGT",
"TAGGTCATT",
"TAGGTACTG",
"ATGGTAACT",
"CAGGTATAC",
"TGTGTGAGT",
"AAGGTAAGT"
)
print (secuencias)
stringSecuencias = unlist (secuencias)
print (stringSecuencias)
seqMatrix = matrix (unlist (strsplit (secuencias, split="")),nrow=N,byrow = T)
secuencias = c (
"GAGGTAAAC",
"TCCGTAAGT",
"CAGGTTGGA",
"ACAGTCAGT",
"TAGGTCATT",
"TAGGTACTG",
"ATGGTAACT",
"CAGGTATAC",
"TGTGTGAGT",
"AAGGTAAGT"
)
print (secuencias)
N = length( (secuencias))
seqMatrix = matrix (unlist (strsplit (secuencias, split="")),nrow=N,byrow = T)
print (seqMatrix)
res = seqMatrix [,1]=="A"
res = seqMatrix [,1]=="A"
print (res)
res = seqMatrix [,1]=="A"
print (res)
N = nrow (seqMatrix)
M = ncol (seqMatrix)
res = seqMatrix [,1]=="A"
print (res)
N = nrow (seqMatrix)
M = ncol (seqMatrix)
res = which (seqMatrix [,1]=="A")
print (res)
N = nrow (seqMatrix)
M = ncol (seqMatrix)
res = sum (which (seqMatrix [,1]=="A"))
print (res)
N = nrow (seqMatrix)
M = ncol (seqMatrix)
res =  length(which (seqMatrix [,1]=="A"))
print (res)
N = nrow (seqMatrix)
M = ncol (seqMatrix)
matrixFreq = NULL
for (j 1:M) {}
N = nrow (seqMatrix)
M = ncol (seqMatrix)
matrixFreq = NULL
for (j in 1:M) {}
nA =  length (which (seqMatrix [,1]=="A"))
nC =  length (which (seqMatrix [,1]=="C"))
nG =  length (which (seqMatrix [,1]=="G"))
nT =  length (which (seqMatrix [,1]=="T"))
columna = c (nA, nC, nG, nT)
matrixFreq = cbind (matrixFreq, columna)
}
N = nrow (seqMatrix)
M = ncol (seqMatrix)
matrixFreq = NULL
for (j in 1:M) {
nA =  length (which (seqMatrix [,1]=="A"))
nC =  length (which (seqMatrix [,1]=="C"))
nG =  length (which (seqMatrix [,1]=="G"))
nT =  length (which (seqMatrix [,1]=="T"))
columna = c (nA, nC, nG, nT)
matrixFreq = cbind (matrixFreq, columna)
}
print (matrixFreq)
N = nrow (seqMatrix)
M = ncol (seqMatrix)
bases = c ("A", "C", "G", T)
matrixFreq = NULL
for (j in 1:M) {
nA =  length (which (seqMatrix [,1]=="A"))
nC =  length (which (seqMatrix [,1]=="C"))
nG =  length (which (seqMatrix [,1]=="G"))
nT =  length (which (seqMatrix [,1]=="T"))
columna = c (nA, nC, nG, nT)
matrixFreq = cbind (matrixFreq, columna)
}
rownames (matrixFreq) = bases
print (matrixFreq)
N = nrow (seqMatrix)
M = ncol (seqMatrix)
bases = c ("A", "C", "G", "T")
matrixFreq = NULL
for (j in 1:M) {
nA =  length (which (seqMatrix [,1]=="A"))
nC =  length (which (seqMatrix [,1]=="C"))
nG =  length (which (seqMatrix [,1]=="G"))
nT =  length (which (seqMatrix [,1]=="T"))
columna = c (nA, nC, nG, nT)
matrixFreq = cbind (matrixFreq, columna)
}
rownames (matrixFreq) = bases
print (matrixFreq)
N = nrow (seqMatrix)
M = ncol (seqMatrix)
bases = c ("A", "C", "G", "T")
matrixFreq = NULL
for (j in 1:M) {
nA =  length (which (seqMatrix [,1]=="A"))
nC =  length (which (seqMatrix [,1]=="C"))
nG =  length (which (seqMatrix [,1]=="G"))
nT =  length (which (seqMatrix [,1]=="T"))
columna = c (nA, nC, nG, nT)
matrixFreq = cbind (matrixFreq, columna)
}
rownames (matrixFreq) = bases
colnames (matrixFreq) = paste ("p", 1:N)
N = nrow (seqMatrix)
M = ncol (seqMatrix)
bases = c ("A", "C", "G", "T")
matrixFreq = NULL
for (j in 1:M) {
nA =  length (which (seqMatrix [,1]=="A"))
nC =  length (which (seqMatrix [,1]=="C"))
nG =  length (which (seqMatrix [,1]=="G"))
nT =  length (which (seqMatrix [,1]=="T"))
columna = c (nA, nC, nG, nT)
matrixFreq = cbind (matrixFreq, columna)
}
rownames (matrixFreq) = bases
colnames (matrixFreq) = paste ("p", 1:M)
print (matrixFreq)
N = nrow (seqMatrix)
M = ncol (seqMatrix)
bases = c ("A", "C", "G", "T")
matrixFreq = NULL
for (j in 1:M) {
nA =  length (which (seqMatrix [,1]=="A"))
nC =  length (which (seqMatrix [,1]=="C"))
nG =  length (which (seqMatrix [,1]=="G"))
nT =  length (which (seqMatrix [,1]=="T"))
columna = c (nA, nC, nG, nT)
matrixFreq = cbind (matrixFreq, columna)
}
rownames (matrixFreq) = bases
colnames (matrixFreq) = paste0 ("p", 1:M)
print (matrixFreq)
matrixProb = matrixFreq /N
print (matrixProb)
N = nrow (seqMatrix)
M = ncol (seqMatrix)
bases = c ("A", "C", "G", "T")
matrixFreq = NULL
for (j in 1:M) {
nA =  length (which (seqMatrix [,j]=="A"))
nC =  length (which (seqMatrix [,j]=="C"))
nG =  length (which (seqMatrix [,j]=="G"))
nT =  length (which (seqMatrix [,j]=="T"))
columna = c (nA, nC, nG, nT)
matrixFreq = cbind (matrixFreq, columna)
}
rownames (matrixFreq) = bases
colnames (matrixFreq) = paste0 ("p", 1:M)
print (matrixFreq)
matrixProb = matrixFreq /N
print (matrixProb)
s = "GAGGTAAAC"
S = unlist (strsplit (secuencias, split=""))
print (S)
s = "GAGGTAAAC"
S = unlist (strsplit (S, split=""))
print (S)
s = "GAGGTAAAC"
S = unlist (strsplit (S, split=""))
print (S)
s = "GAGGTAAAC"
S = unlist (strsplit (s, split=""))
print (S)
matrixProb = matrixFreq /N
print (matrixProb)
PWM = matrixProb
s = "GAGGTAAAC"
S = unlist (strsplit (s, split=""))
print (S)
probTotal = 1
for (j in 1:M) {
base = S [j]
prob = PWM [base, j]
probTotal = probTotal * prob
}
print (probTotal)
s = "TAGGTAAGT"
S = unlist (strsplit (s, split=""))
print (S)
probTotal = 1
for (j in 1:M) {
base = S [j]
prob = PWM [base, j]
probTotal = probTotal * prob
}
print (probTotal)
s = "TAGGTAAGT"
S = unlist (strsplit (s, split=""))
print (S)
probTotal = 1
for (j in 1:M) {
base = S [j]
prob = PWM [base, j]
probTotal = probTotal * prob
cat (prob,"")
}
print (probTotal)
s = "AAAAAAAAA"
S = unlist (strsplit (s, split=""))
print (S)
probTotal = 1
for (j in 1:M) {
base = S [j]
prob = PWM [base, j]
probTotal = probTotal * prob
cat (prob,"")
}
print (probTotal)
pos = 3
suma = 0
for (B in c("A","C","G","T")) {
suma = suma + PWM [B, pos]
}
print (suma)
pos = 3
suma = 0
for (B in c("A","C","G","T")) {
suma = suma + 2 + PWM [B, pos]*log2 (PWM [B, pos])
}
print (suma)
pos = 4
suma = 0
for (B in c("A","C","G","T")) {
suma = suma + 2 + PWM [B, pos]*log2 (PWM [B, pos])
}
print (suma)
N = nrow (seqMatrix)
M = ncol (seqMatrix)
bases = c ("A", "C", "G", "T")
matrixFreq = NULL
for (j in 1:M) {
nA =  length (which (seqMatrix [,j]=="A"))
nC =  length (which (seqMatrix [,j]=="C"))
nG =  length (which (seqMatrix [,j]=="G"))
nT =  length (which (seqMatrix [,j]=="T"))
columna = c (nA, nC, nG, nT)
matrixFreq = cbind (matrixFreq, columna)
}
rownames (matrixFreq) = bases
colnames (matrixFreq) = paste0 ("p", 1:M)
print (matrixFreq)
matrixFreq = matrixFreq + 1
N = nrow (seqMatrix)
M = ncol (seqMatrix)
bases = c ("A", "C", "G", "T")
matrixFreq = NULL
for (j in 1:M) {
nA =  length (which (seqMatrix [,j]=="A"))
nC =  length (which (seqMatrix [,j]=="C"))
nG =  length (which (seqMatrix [,j]=="G"))
nT =  length (which (seqMatrix [,j]=="T"))
columna = c (nA, nC, nG, nT)
matrixFreq = cbind (matrixFreq, columna)
}
rownames (matrixFreq) = bases
colnames (matrixFreq) = paste0 ("p", 1:M)
matrixFreq = matrixFreq + 1
print (matrixFreq)
matrixProb = matrixFreq /N
print (matrixProb)
PWM = matrixProb
matrixProb = matrixFreq /(N+4)
print (matrixProb)
PWM = matrixProb
s = "TAGGTAAGT"
S = unlist (strsplit (s, split=""))
print (S)
probTotal = 1
for (j in 1:M) {
base = S [j]
prob = PWM [base, j]
probTotal = probTotal * prob
cat (prob,"")
}
print (probTotal)
pos = 4
suma = 0
for (B in c("A","C","G","T")) {
suma = suma + 2 + PWM [B, pos]*log2 (PWM [B, pos])
}
print (suma)
pos = 5
suma = 0
for (B in c("A","C","G","T")) {
suma = suma + 2 + PWM [B, pos]*log2 (PWM [B, pos])
}
print (suma)
pos = 5
suma = 0
for (B in c("A","C","G","T")) {
suma = suma + PWM [B, pos]*log2 (PWM [B, pos])
}
CI = 2 + suma
print (CI)
pos = 1
suma = 0
for (B in c("A","C","G","T")) {
suma = suma + PWM [B, pos]*log2 (PWM [B, pos])
}
CI = 2 + suma
print (CI)
library (ggplot2)
library (ggplot2)
library (ggseqlogo)
ggseqlogo::ggseqlogo (PWM)
library (ggplot2)
library (ggseqlogo)
ggseqlogo::ggseqlogo (PWM)
print ("<x-x-x-G-T-x-x-x")
N = nrow (seqMatrix)
M = ncol (seqMatrix)
bases = c ("A", "C", "G", "T")
matrixFreq = NULL
for (j in 1:M) {
columna = c()
for (B in bases) {
nB =  length (which (seqMatrix [,j]==B))
columna = c (columna, nB)
}
matrixFreq = cbind (matrixFreq, columna)
}
rownames (matrixFreq) = bases
colnames (matrixFreq) = paste0 ("p", 1:M)
matrixFreq = matrixFreq + 1
print (matrixFreq)
